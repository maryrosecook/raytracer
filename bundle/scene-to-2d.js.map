{"version":3,"sources":["webpack:///webpack/bootstrap 8b0d8d138c2d01d77931","webpack:///./src/scene-to-2d-index.js","webpack:///./src/sphere.js","webpack:///./src/check-object-attributes.js","webpack:///./src/ray.js","webpack:///./src/vector.js","webpack:///./src/line.js","webpack:///./src/ray-sphere-intersection.js","webpack:///./src/drawable-entity.js","webpack:///./src/scene-to-2d.js","webpack:///./src/drawing.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAsB,sBAAsB;AAC5C;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA,aAAY;AACZ;AACA;AACA,sBAAqB,mBAAmB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,iCAAgC,kCAAkC;AAClE;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;ACvJD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACVA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;ACjBA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACTA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7FA;AACA;AACA;AACA;;AAEA;;;;;;;ACLA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA,qCAAoC,qBAAqB,EAAE;;AAE3D;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC3GA;AACA;AACA;AACA;;AAEA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA,IAAG,sCAAsC;AACzC,IAAG,gCAAgC;AACnC,IAAG,sCAAsC;AACzC,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACjFA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle/scene-to-2d.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8b0d8d138c2d01d77931\n **/","var Sphere = require(\"./sphere\");\nvar Ray = require(\"./ray\");\nvar Vector = require(\"./vector\");\nvar Line = require(\"./line\");\nvar RaySphereIntersection = require(\"./ray-sphere-intersection\");\nvar DrawableEntity = require(\"./drawable-entity\");\nvar drawSceneIn2d = require(\"./scene-to-2d\");\nvar drawing = require(\"./drawing\");\n\nvar screen = document\n    .getElementById(\"screen\")\n    .getContext(\"2d\");\n\nvar primaryRay = new Ray({\n  origin: new Vector({ x: 50, y: 200, z: 0 }),\n  direction: vectorFromAngle(0)\n});\n\nvar sphere = new Sphere({\n  center: new Vector({\n    x: 200,\n    y: 200,\n    z: 0\n  }),\n  radius: 100\n});\n\nvar lightSphere = new Sphere({\n  center: new Vector({\n    x: 50,\n    y: 0,\n    z: 0\n  }),\n  radius: 30\n});\n\nfunction vectorFromAngle(angle) {\n  var r = radians(angle);\n  var up = { x: 0, y: -1 };\n  var x = Math.cos(r) * up.x - Math.sin(r) * up.y;\n  var y = Math.sin(r) * up.x + Math.cos(r) * up.y;\n  return new Vector({ x: x, y: y, z: 0 }).normalize();\n};\n\nfunction angleFromVector(vector) {\n  var unitVector = vector.normalize();\n  var uncorrectedDegrees = degrees(Math.atan2(unitVector.x,\n                                              -unitVector.y));\n  var angle = uncorrectedDegrees;\n  if(uncorrectedDegrees < 0) {\n    angle = 360 + uncorrectedDegrees;\n  }\n\n  return angle;\n};\n\nfunction rotateRayTo(ray, angle) {\n  ray.direction = vectorFromAngle(angle);\n};\n\nfunction radians(degrees) {\n  return degrees * Math.PI / 180;\n};\n\nfunction degrees(radians) {\n  return radians * 180 / Math.PI;\n};\n\nfunction generateShadowRay(intersection, lightSphere) {\n  return new Ray({\n    origin: intersection,\n    direction: lightSphere.center.subtract(intersection).normalize()\n  });\n};\n\nfunction entitiesToDraw(ray, sphere, lightSphere) {\n  var entities = [\n    new DrawableEntity(sphere, { strokeStyle: \"black\", zindex: 1 }),\n    new DrawableEntity(lightSphere, {\n      fillStyle: \"yellow\",\n      zindex: 1\n    })\n  ];\n\n  var raySphereIntersection = new RaySphereIntersection({\n    ray: ray,\n    sphere: sphere\n  });\n\n  if (raySphereIntersection.exists()) {\n    var shadowRay = generateShadowRay(raySphereIntersection.point(),\n                                      lightSphere);\n\n    var primaryRayLine = new Line({\n      start: ray.origin, end: raySphereIntersection.point()\n    });\n\n    entities.push(new DrawableEntity(primaryRayLine, {\n      strokeStyle: \"black\",\n      zindex: 1\n    }));\n\n    var shadowRaySphereIntersection = new RaySphereIntersection({\n      ray: shadowRay,\n      sphere: sphere\n    });\n\n    if (!shadowRaySphereIntersection.exists()) {\n      var shadowRayLightIntersection = new RaySphereIntersection({\n        ray: shadowRay,\n        sphere: lightSphere\n      });\n\n      entities.push(new DrawableEntity(\n        shadowRayLightIntersection.point(), {\n          strokeStyle: \"black\",\n          zindex: 2\n        }));\n\n      entities.push(new DrawableEntity(shadowRay, {\n        strokeStyle: \"black\",\n        zindex: -1\n      }));\n    }\n\n    entities.push(new DrawableEntity(raySphereIntersection.point(), {\n      strokeStyle: \"black\",\n      zindex: 1\n    }));\n  } else {\n    entities.push(new DrawableEntity(ray, {\n      strokeStyle: \"black\",\n      zindex: -1\n    }));\n  }\n\n  return entities;\n};\n\n(function start() {\n  drawing.setCanvasSize(screen, 500, 500);\n  drawing.setFocus(screen.canvas.width / 2, screen.canvas.height / 2);\n\n  (function tick() {\n    rotateRayTo(primaryRay,\n                angleFromVector(primaryRay.direction) + 1);\n    drawSceneIn2d(screen, entitiesToDraw(primaryRay,\n                                         sphere,\n                                         lightSphere));\n    requestAnimationFrame(tick);\n  })();\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scene-to-2d-index.js\n ** module id = 0\n ** module chunks = 0\n **/","var checkObjectAttributes = require(\"./check-object-attributes\");\n\nfunction Sphere(options) {\n  checkObjectAttributes(options, [\"center\", \"radius\"]);\n  checkObjectAttributes(options.center, [\"x\", \"y\", \"z\"]);\n\n  this.center = options.center.copy();\n  this.radius = options.radius;\n};\n\nmodule.exports = Sphere;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sphere.js\n ** module id = 1\n ** module chunks = 0\n **/","function checkObjectAttributes(object, attributes) {\n  if (!object) {\n    throw new Error (\"Requires object\");\n  }\n\n  var missingOption = firstMissingAttribute(object, attributes);\n  if (missingOption) {\n    throw new Error (\"Requires \" + missingOption + \" option\");\n  }\n};\n\nfunction firstMissingAttribute(object, attributes) {\n  return attributes.filter(function(attribute) {\n    return object[attribute] == null;\n  })[0];\n};\n\nmodule.exports = checkObjectAttributes;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/check-object-attributes.js\n ** module id = 2\n ** module chunks = 0\n **/","var checkObjectAttributes = require(\"./check-object-attributes\");\n\nfunction Ray(options) {\n  checkObjectAttributes(options, [\"origin\", \"direction\"]);\n\n  this.origin = options.origin.copy();\n  this.direction = options.direction.copy();\n};\n\nmodule.exports = Ray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ray.js\n ** module id = 3\n ** module chunks = 0\n **/","var checkObjectAttributes = require(\"./check-object-attributes\");\n\nfunction Vector(options) {\n  this.x = options.x;\n  this.y = options.y;\n  this.z = options.z;\n\n  this.checkIsValid();\n};\n\nVector.prototype = {\n  checkIsValid: function() {\n    checkIsNumber(this.x);\n    checkIsNumber(this.y);\n    checkIsNumber(this.z);\n  },\n\n  copy: function() {\n    this.checkIsValid();\n\n    return new Vector({\n      x: this.x,\n      y: this.y,\n      z: this.z\n    });\n  },\n\n  multiplyByScalar: function(scalar) {\n    this.checkIsValid();\n    checkIsNumber(scalar);\n\n    return new Vector({\n      x: this.x * scalar,\n      y: this.y * scalar,\n      z: this.z * scalar\n    });\n  },\n\n  add: function(vector) {\n    this.checkIsValid();\n    vector.checkIsValid();\n\n    return new Vector({\n      x: this.x + vector.x,\n      y: this.y + vector.y,\n      z: this.z + vector.z\n    });\n  },\n\n  subtract: function(vector) {\n    this.checkIsValid()\n    vector.checkIsValid();\n\n    return new Vector({\n      x: this.x - vector.x,\n      y: this.y - vector.y,\n      z: this.z - vector.z\n    });\n  },\n\n  magnitude: function() {\n    this.checkIsValid();\n    return Math.sqrt(Math.pow(this.x, 2) +\n                     Math.pow(this.y, 2) +\n                     Math.pow(this.z, 2));\n  },\n\n  normalize: function() {\n    this.checkIsValid();\n    var vectorMagnitude = this.magnitude();\n    return new Vector({\n      x: this.x / vectorMagnitude,\n      y: this.y / vectorMagnitude,\n      z: this.z / vectorMagnitude,\n    });\n  },\n\n  dotProduct: function(vector) {\n    this.checkIsValid()\n    vector.checkIsValid();\n\n    return this.x * vector.x +\n      this.y * vector.y +\n      this.z * vector.z;\n  }\n};\n\nfunction checkIsNumber(number) {\n  if (typeof number !== \"number\") {\n    throw new Error(\"Should be a number\");\n  }\n};\n\nmodule.exports = Vector;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/vector.js\n ** module id = 4\n ** module chunks = 0\n **/","function Line(options) {\n  this.start = options.start;\n  this.end = options.end;\n};\n\nmodule.exports = Line;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/line.js\n ** module id = 5\n ** module chunks = 0\n **/","var checkObjectAttributes = require(\"./check-object-attributes\");\n\nfunction RaySphereIntersection(options) {\n  checkObjectAttributes(options, [\"ray\", \"sphere\"]);\n\n  this.ray = options.ray;\n  this.sphere = options.sphere;\n};\n\nRaySphereIntersection.prototype = {\n  exists: function() {\n    return this._distanceRayToSphereCenter(this.sphere) <\n        this.sphere.radius &&\n        this._firstPositiveIntersectionDistance(this.sphere) !==\n          undefined;\n  },\n\n  point: function() {\n    if (!this.exists()) {\n      throw new Error(\"Not intersecting\");\n    }\n\n    var intersectionPointWhichMightBeInsideSphere =\n        this._pointAlongRay(\n          this._firstPositiveIntersectionDistance());\n\n    return this._movePointOutsideSphere(\n      intersectionPointWhichMightBeInsideSphere);\n  },\n\n  _pointAlongRay: function(distance) {\n    return this.ray.origin\n      .add(this.ray.direction.multiplyByScalar(distance));\n  },\n\n  _movePointOutsideSphere: function(point) {\n    // Floating point inaccuracies sometimes put intersectionPoint\n    // inside sphere and sometimes outside.  We always want to return\n    // an intersectionPoint just outside the sphere.\n    return point\n      .subtract(this.sphere.center)\n      .normalize()\n      .multiplyByScalar(this.sphere.radius + 0.00000000000001)\n      .add(this.sphere.center);\n  },\n\n  _firstPositiveIntersectionDistance: function() {\n    var intersectionDistancesAlongRay =\n        this._intersectionDistancesAlongRay(this.sphere);\n\n    var positiveIntersections = intersectionDistancesAlongRay\n        .filter(function(distance) { return distance > 0; });\n\n    if (positiveIntersections.length === 2) {\n      return Math.min(positiveIntersections[0],\n                      positiveIntersections[1]);\n    } else if (positiveIntersections.length === 1) {\n      return positiveIntersections[0];\n    }\n  },\n\n  _distanceRayToSphereCenter: function() {\n    var sphereCenterToRayOriginLength =\n        this._sphereCenterToRayOriginVector(this.sphere).magnitude();\n\n    if (this._originRayCenterAdjacentLongerThanHypotenuse(\n          this.sphere)) {\n      return 0;\n    } else {\n      return Math.sqrt(Math.pow(sphereCenterToRayOriginLength, 2) -\n                       Math.pow(this._tca(this.sphere), 2));\n    }\n  },\n\n  _originRayCenterAdjacentLongerThanHypotenuse: function() {\n    // Floating point has made ray origin sphere center triangle\n    // illogical. This happens if ray goes through center of sphere,\n    // but only some of the time.\n    return this._sphereCenterToRayOriginVector(this.sphere)\n      .magnitude() < this._tca(this.sphere);\n  },\n\n  _intersectionDistancesAlongRay: function() {\n    return [\n      this._tca(this.sphere) - this._thc(this.sphere),\n      this._tca(this.sphere) + this._thc(this.sphere)\n    ];\n  },\n\n  _sphereCenterToRayOriginVector: function() {\n    return this.sphere.center.subtract(this.ray.origin);\n  },\n\n  _tca: function() {\n    return this._sphereCenterToRayOriginVector(this.sphere)\n      .dotProduct(this.ray.direction);\n  },\n\n  _thc: function() {\n    var distanceRayToSphereCenter =\n        this._distanceRayToSphereCenter(this.sphere);\n\n    return Math.sqrt(Math.pow(this.sphere.radius, 2) -\n                     Math.pow(distanceRayToSphereCenter, 2));\n  }\n};\n\nmodule.exports = RaySphereIntersection;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ray-sphere-intersection.js\n ** module id = 6\n ** module chunks = 0\n **/","function DrawableEntity(entity, style) {\n  this.entity = entity;\n  this.style = style;\n};\n\nmodule.exports = DrawableEntity;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/drawable-entity.js\n ** module id = 7\n ** module chunks = 0\n **/","var Sphere = require(\"./sphere\");\nvar Ray = require(\"./ray\");\nvar Vector = require(\"./vector\");\nvar Line = require(\"./line\");\nvar drawing = require(\"./drawing\");\n\nfunction drawSceneIn2d(screen, drawableEntities) {\n  screen.clearRect(0, 0, screen.canvas.width, screen.canvas.height);\n  drawEntities(screen, drawableEntities);\n};\n\nfunction drawEntities(screen, drawableEntities) {\n  drawableEntities.sort(function(drawableEntity1, drawableEntity2) {\n    return drawableEntity1.style.zindex -\n      drawableEntity2.style.zindex;\n  }).forEach(function(drawableEntity) {\n    drawFunctionForEntity(drawableEntity)(screen,\n                                          drawableEntity.entity,\n                                          drawableEntity.style);\n  });\n};\n\nfunction drawFunctionForEntity(drawableEntity) {\n  return drawFnMappings.filter(function(drawFnMapping) {\n    return drawableEntity.entity\n      instanceof drawFnMapping.constructor;\n  })[0].fn;\n};\n\nvar drawFnMappings = [\n  { constructor: Sphere, fn: drawSphere },\n  { constructor: Ray, fn: drawRay },\n  { constructor: Vector, fn: drawVector },\n  { constructor: Line, fn: drawLine }\n];\n\nfunction drawSphere(screen, sphere, style) {\n  if (style.strokeStyle) {\n    drawing.strokeCircle(screen,\n                         sphere.center,\n                         sphere.radius,\n                         style.strokeStyle);\n  }\n\n  if (style.fillStyle) {\n    drawing.fillCircle(screen,\n                       sphere.center,\n                       sphere.radius,\n                       style.fillStyle);\n  }\n};\n\nfunction drawRay(screen, ray, style) {\n  drawVector(screen, ray.origin, style);\n  drawLineBody(screen,\n               ray.origin,\n               offscreenRayPoint(ray),\n               style.strokeStyle);\n};\n\nfunction drawLine(screen, line, style) {\n  drawVector(screen, line.start, style);\n  drawVector(screen, line.end, style);\n  drawLineBody(screen,\n               line.start,\n               line.end,\n               style.strokeStyle);\n};\n\nfunction drawVector(screen, vector, style) {\n  drawing.strokeCircle(screen, vector, 5, style.strokeStyle);\n};\n\nfunction drawLineBody(screen, start, end, style) {\n  drawing.strokeLine(screen, start, end, style.strokeStyle);\n};\n\nfunction offscreenRayPoint(ray) {\n  return ray.origin.add(ray.direction.multiplyByScalar(1000));\n};\n\nmodule.exports = drawSceneIn2d;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scene-to-2d.js\n ** module id = 8\n ** module chunks = 0\n **/","var focus = {\n  x: 0,\n  y: 0\n};\n\nvar scale = 1;\n\nfunction scaleAndFocus(screen) {\n  screen.save();\n  screen.scale(scale, scale);\n  screen.lineWidth = 1 / scale;\n  screen.translate(-focus.x + screen.canvas.width / 2 / scale,\n                   -focus.y + screen.canvas.height / 2 / scale);\n};\n\nfunction unscaleAndUnfocus(screen) {\n  screen.restore();\n};\n\nfunction strokeLine(screen, start, end, strokeStyle) {\n  scaleAndFocus(screen);\n  screen.strokeStyle = strokeStyle;\n  screen.moveTo(start.x, start.y);\n  screen.lineTo(end.x, end.y);\n  screen.stroke();\n  unscaleAndUnfocus(screen);\n};\n\nfunction strokeCircle(screen, center, radius, strokeStyle) {\n  scaleAndFocus(screen);\n  defineCircle(screen, center, radius);\n  screen.strokeStyle = strokeStyle;\n  screen.stroke();\n  unscaleAndUnfocus(screen);\n};\n\nfunction fillCircle(screen, center, radius, fillStyle) {\n  scaleAndFocus(screen);\n  defineCircle(screen, center, radius);\n  screen.fillStyle = fillStyle;\n  screen.fill();\n  unscaleAndUnfocus(screen);\n};\n\nfunction defineCircle(screen, center, radius) {\n  screen.beginPath();\n  screen.arc(center.x,\n             center.y,\n             radius,\n             0,\n             Math.PI * 2,\n             true);\n  screen.closePath();\n};\n\nfunction setCanvasSize(screen, width, height) {\n  screen.canvas.width = width;\n  screen.canvas.height = height;\n};\n\nfunction setFocus(inFocus) {\n  focus = {\n    x: inFocus.x,\n    y: inFocus.y\n  };\n};\n\nfunction getFocus() {\n  return focus;\n};\n\nmodule.exports = {\n  strokeLine: strokeLine,\n  strokeCircle: strokeCircle,\n  fillCircle: fillCircle,\n  setCanvasSize: setCanvasSize,\n  setFocus: setFocus,\n  getFocus: getFocus\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/drawing.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}